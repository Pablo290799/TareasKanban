{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pablo.bogado/Desktop/Angular/TareasKanban/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/data.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/cdk/drag-drop\";\n\nfunction BoardComponent_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(card_r4);\n  }\n}\n\nfunction BoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BoardComponent_div_3_Template_div_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDrop($event));\n    });\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BoardComponent_div_3_div_3_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const list_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r2.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", list_r2.cards);\n  }\n}\n\nfunction BoardComponent_div_4_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_p_3_Template_p_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const list_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.editingTitle(list_r7, true));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const list_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", list_r7.title, \" \");\n  }\n}\n\nfunction BoardComponent_div_4_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function BoardComponent_div_4_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const list_r7 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(list_r7.title = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const list_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", list_r7.title);\n  }\n}\n\nfunction BoardComponent_div_4_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const list_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.updateListTitle(list_r7));\n    });\n    i0.ɵɵtext(1, \" Guardar \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BoardComponent_div_4_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", card_r23.title, \" \");\n  }\n}\n\nfunction BoardComponent_div_4_div_6_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function BoardComponent_div_4_div_6_input_2_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const card_r23 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(card_r23.title = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", card_r23.title);\n  }\n}\n\nfunction BoardComponent_div_4_div_6_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_div_6_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const card_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.updateCard(card_r23));\n    });\n    i0.ɵɵtext(1, \" Actualizar \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BoardComponent_div_4_div_6_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_div_6_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const card_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.deleteCard(card_r23));\n    });\n    i0.ɵɵtext(1, \" Borrar \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BoardComponent_div_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"cdkDragEnded\", function BoardComponent_div_4_div_6_Template_div_cdkDragEnded_0_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const list_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onCardDragEnded($event, list_r7.id));\n    })(\"click\", function BoardComponent_div_4_div_6_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const card_r23 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r42.editingCard(card_r23, true));\n    });\n    i0.ɵɵtemplate(1, BoardComponent_div_4_div_6_p_1_Template, 2, 1, \"p\", 26);\n    i0.ɵɵtemplate(2, BoardComponent_div_4_div_6_input_2_Template, 1, 1, \"input\", 27);\n    i0.ɵɵelementStart(3, \"div\", 28);\n    i0.ɵɵtemplate(4, BoardComponent_div_4_div_6_button_4_Template, 2, 0, \"button\", 18);\n    i0.ɵɵtemplate(5, BoardComponent_div_4_div_6_button_5_Template, 2, 0, \"button\", 29);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const card_r23 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"cdkDragData\", card_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r11.editCard[card_r23.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.editCard[card_r23.id]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.editCard[card_r23.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.editCard[card_r23.id]);\n  }\n}\n\nfunction BoardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BoardComponent_div_4_Template_div_cdkDropListDropped_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const list_r7 = restoredCtx.$implicit;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onCardDropped($event, list_r7.id));\n    });\n    i0.ɵɵelementStart(1, \"div\", 14)(2, \"div\", 15);\n    i0.ɵɵtemplate(3, BoardComponent_div_4_p_3_Template, 2, 1, \"p\", 16);\n    i0.ɵɵtemplate(4, BoardComponent_div_4_input_4_Template, 1, 1, \"input\", 17);\n    i0.ɵɵtemplate(5, BoardComponent_div_4_button_5_Template, 2, 0, \"button\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BoardComponent_div_4_div_6_Template, 6, 5, \"div\", 19);\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_Template_div_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const list_r7 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.addCard(list_r7));\n    });\n    i0.ɵɵtext(8, \" + Agregar Tarjeta \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_4_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const list_r7 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.deleteBoardList(list_r7));\n    });\n    i0.ɵɵtext(10, \" Eliminar Lista \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const list_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDropListData\", ctx_r1.listCards[list_r7.id]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.editTitle[list_r7.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.editTitle[list_r7.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.editTitle[list_r7.id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listCards[list_r7.id]);\n  }\n}\n\nexport class BoardComponent {\n  constructor(route, dataService, router) {\n    this.route = route;\n    this.dataService = dataService;\n    this.router = router;\n    this.lists = [];\n    this.boardId = null;\n    this.editTitle = {};\n    this.editCard = {};\n    this.boardInfo = null;\n    this.titleChanged = false;\n    this.listCards = {};\n    this.addUserEmail = '';\n    this.lista = [{\n      id: 'list1',\n      title: 'Lista 1',\n      cards: ['Card 1', 'Card 2', 'Card 3']\n    }, {\n      id: 'list2',\n      title: 'Lista 2',\n      cards: ['Card 4', 'Card 5', 'Card 6']\n    }, {\n      id: 'list3',\n      title: 'Lista 3',\n      cards: ['Card 7', 'Card 8', 'Card 9']\n    }];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.boardId = _this.route.snapshot.paramMap.get('id');\n\n      if (_this.boardId) {\n        _this.boardInfo = (yield _this.dataService.getBoardInfo(_this.boardId)).data;\n        _this.lists = yield _this.dataService.getBoardLists(_this.boardId); // Retrieve cards for each list\n\n        for (let list of _this.lists) {\n          _this.listCards[list.id] = yield _this.dataService.getListCards(list.id);\n        }\n\n        _this.handleRealtimeUpdates();\n      }\n    })();\n  } //\n  // BOARD logic\n  //\n\n\n  saveBoardTitle() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.dataService.updateBoard(_this2.boardInfo);\n      _this2.titleChanged = false;\n    })();\n  }\n\n  deleteBoard() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.dataService.deleteBoard(_this3.boardInfo);\n\n      _this3.router.navigateByUrl('/workspace');\n    })();\n  } //\n  // LISTS logic\n  //\n\n\n  addList() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const newList = yield _this4.dataService.addBoardList(_this4.boardId, _this4.lists.length);\n    })();\n  }\n\n  editingTitle(list, edit = false) {\n    this.editTitle[list.id] = edit;\n  }\n\n  updateListTitle(list) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.dataService.updateBoardList(list);\n\n      _this5.editingTitle(list, false);\n    })();\n  }\n\n  deleteBoardList(list) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.dataService.deleteBoardList(list);\n    })();\n  } //\n  // CARDS logic\n  //\n\n\n  addCard(list) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.dataService.addListCard(list.id, _this7.boardId, _this7.listCards[list.id].length);\n    })();\n  }\n\n  editingCard(card, edit = false) {\n    this.editCard[card.id] = edit;\n  }\n\n  updateCard(card) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this8.dataService.updateCard(card);\n\n      _this8.editingCard(card, false);\n    })();\n  }\n\n  deleteCard(card) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this9.dataService.deleteCard(card);\n    })();\n  }\n\n  moveCardToList(card, newListId) {\n    const oldlist = card.listId; //Eliminar la tarjeta de la lista actual\n\n    this.listCards[oldlist] = this.listCards[oldlist].filter(c => c.id !== card.id); //Agregar la tarjeta a la nueva lista\n\n    card.listId = newListId;\n    this.listCards[newListId].push(card);\n  }\n\n  onCardDropped(event, targetListId) {\n    const previousListId = event.previousContainer.id;\n    const card = event.item.data; // Eliminar la tarjeta de la lista de origen\n\n    this.listCards[previousListId] = this.listCards[previousListId].filter(c => c.id !== card.id); // Insertar la tarjeta en la lista de destino en la posición actual\n\n    this.listCards[targetListId].splice(event.currentIndex, 0, card);\n  }\n\n  onDrop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n\n  onCardDragEnded(event, listId) {\n    const currentIndex = event.currentIndex;\n    const previousIndex = event.previousIndex;\n\n    if (currentIndex !== previousIndex && !event.isPointerOverContainer) {\n      // Si la tarjeta no se soltó en una lista, devolverla a su posición original\n      const card = event.item.data;\n      const list = this.listCards[listId]; // Eliminar la tarjeta de su posición actual y devolverla a la posición anterior\n\n      list.splice(currentIndex, 1);\n      list.splice(previousIndex, 0, card);\n    }\n  } // Invites\n\n\n  addUser() {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this10.dataService.addUserToBoard(_this10.boardId, _this10.addUserEmail);\n      _this10.addUserEmail = '';\n    })();\n  }\n\n  onKeydownHandler(event) {\n    if (event.keyCode === 27) {\n      // Close whatever needs to be closed!\n      this.titleChanged = false;\n      Object.keys(this.editCard).map(item => {\n        this.editCard[item] = false;\n        return item;\n      });\n      Object.keys(this.editTitle).map(item => {\n        this.editTitle[item] = false;\n        return item;\n      });\n    }\n  }\n\n  handleRealtimeUpdates() {\n    this.dataService.getTableChanges().subscribe(update => {\n      const record = update.new?.id ? update.new : update.old;\n      const event = update.eventType;\n      if (!record) return;\n\n      if (update.table == 'cards') {\n        if (event === 'INSERT') {\n          this.listCards[record.list_id].push(record);\n        } else if (event === 'UPDATE') {\n          const newArr = [];\n\n          for (let card of this.listCards[record.list_id]) {\n            if (card.id == record.id) {\n              card = record;\n            }\n\n            newArr.push(card);\n          }\n\n          this.listCards[record.list_id] = newArr;\n        } else if (event === 'DELETE') {\n          this.listCards[record.list_id] = this.listCards[record.list_id].filter(card => card.id !== record.id);\n        }\n      } else if (update.table == 'lists') {\n        if (event === 'INSERT') {\n          this.lists.push(record);\n          this.listCards[record.id] = [];\n        } else if (event === 'UPDATE') {\n          this.lists.filter(list => list.id === record.id)[0] = record;\n          const newArr = [];\n\n          for (let list of this.lists) {\n            if (list.id == record.id) {\n              list = record;\n            }\n\n            newArr.push(list);\n          }\n\n          this.lists = newArr;\n        } else if (event === 'DELETE') {\n          this.lists = this.lists.filter(list => list.id !== record.id);\n        }\n      }\n    });\n  }\n\n}\n\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i1.Router));\n};\n\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  hostBindings: function BoardComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function BoardComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydownHandler($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 13,\n  vars: 3,\n  consts: [[1, \"max-w-7xl\", \"mx-auto\", \"px-4\", \"sm:px-6\", \"lg:px-8\", \"py-8\"], [1, \"grid\", \"grid-cols-2\", \"gap-x-4\", \"gap-y-8\", \"sm:grid-cols-3\", \"sm:gap-x-6\", \"lg:grid-cols-4\", \"xl:gap-x-8\"], [1, \"container\"], [\"class\", \"list\", \"cdkDropList\", \"\", 3, \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"list-container\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [1, \"relative\", \"min-h-auto\", \"h-16\", \"rounded\", \"font-semibold\", \"text-lg\", \"py-4\", \"px-4\", 2, \"background-color\", \"rgb(32, 62, 129)\", \"color\", \"white\", 3, \"click\"], [1, \"flex\", \"gap-4\", \"py-12\", \"items-center\"], [1, \"text-3xl\", \"font-extrabold\", \"text-gray-900\", \"block\"], [\"placeholder\", \"ejemplo@xd.com\", 1, \"block\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-emerald-500\", \"focus:border-emerald-500\", \"sm:text-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"inline-flex\", \"items-center\", \"px-2.5\", \"py-1.5\", \"border\", \"border-transparent\", \"text-xs\", \"font-medium\", \"rounded\", \"shadow-sm\", \"text-white\", \"bg-emerald-600\", \"hover:bg-emerald-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-emerald-500\", 3, \"click\"], [\"cdkDropList\", \"\", 1, \"list\", 3, \"cdkDropListDropped\"], [\"class\", \"card\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"card\"], [\"cdkDropList\", \"\", 1, \"list-container\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [1, \"relative\", \"min-h-52\", \"h-auto\", \"rounded\", \"font-semibold\", \"text-sm\", \"py-4\", \"px-4\", 2, \"background-color\", \"rgb(32, 62, 129)\"], [1, \"flex\", \"gap-2\", \"pb-4\"], [\"class\", \"hover:cursor-pointer text-white\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-emerald-500 focus:border-emerald-500 sm:text-sm\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"font-medium\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"flex flex-col items-center gap-2\", \"cdkDrag\", \"\", 3, \"cdkDragData\", \"cdkDragEnded\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"pt-8\", \"text-gray-500\", \"hover:cursor-pointer\", 3, \"click\"], [1, \"font-medium\", \"text-small\", \"text-red-700\", \"hover:text-white\", 3, \"click\"], [1, \"hover:cursor-pointer\", \"text-white\", 3, \"click\"], [1, \"block\", \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-emerald-500\", \"focus:border-emerald-500\", \"sm:text-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"font-medium\", 3, \"click\"], [\"cdkDrag\", \"\", 1, \"flex\", \"flex-col\", \"items-center\", \"gap-2\", 3, \"cdkDragData\", \"cdkDragEnded\", \"click\"], [\"class\", \"h-15 py-2 px-2 bg-white inline-block\", \"style\", \"overflow:hidden; display: flex;\", 4, \"ngIf\"], [\"class\", \"block px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-emerald-500 focus:border-emerald-500 sm:text-sm\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [1, \"flex\", \"align-items-center\", \"justify-between\"], [\"class\", \"font-medium text-red-600\", 3, \"click\", 4, \"ngIf\"], [1, \"h-15\", \"py-2\", \"px-2\", \"bg-white\", \"inline-block\", 2, \"overflow\", \"hidden\", \"display\", \"flex\"], [1, \"block\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-emerald-500\", \"focus:border-emerald-500\", \"sm:text-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"font-medium\", \"text-red-600\", 3, \"click\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, BoardComponent_div_3_Template, 4, 2, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, BoardComponent_div_4_Template, 11, 5, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵlistener(\"click\", function BoardComponent_Template_div_click_5_listener() {\n        return ctx.addList();\n      });\n      i0.ɵɵtext(6, \" + Nueva Lista \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"span\", 7);\n      i0.ɵɵtext(9, \"Invitar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function BoardComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.addUserEmail = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_11_listener() {\n        return ctx.addUser();\n      });\n      i0.ɵɵtext(12, \" Invitar \");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.addUserEmail);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.CdkDropList, i5.CdkDrag],\n  styles: [\"header[_ngcontent-%COMP%] {\\n  background-color: rgb(32, 62, 129);\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: rgb(32, 62, 129);\\n  color: white;\\n  border: 1px solid white;\\n  padding: 8px 16px;\\n  border-radius: 4px;\\n  transition: color 0.3s ease;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: white;\\n  color: rgb(32, 62, 129);\\n  border: 1px solid white;\\n}\\n\\n.bg-rgb-32-62-129[_ngcontent-%COMP%] {\\n  background-color: rgb(32, 62, 129);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0Usa0NBSlk7QUFDZDs7QUFPQTtFQUNJLGtDQVRVO0VBVVYsWUFBQTtFQUNBLHVCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLDJCQUFBO0FBSko7O0FBT0k7RUFDSSx1QkFBQTtFQUNBLHVCQW5CTTtFQW9CTix1QkFBQTtBQUxSOztBQVFFO0VBQ0Usa0NBQUE7QUFMSiIsImZpbGUiOiJib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmluZSBjdXN0b20gdmFyaWFibGUgZm9yIHRoZSBSR0IgY29sb3JcclxuJGN1c3RvbS1ibHVlOiByZ2IoMzIsIDYyLCAxMjkpO1xyXG5cclxuLy8gQXBwbHkgdGhlIGN1c3RvbSBjb2xvciB0byB0aGUgaGVhZGVyXHJcbmhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGN1c3RvbS1ibHVlO1xyXG59XHJcblxyXG4vLyBBcHBseSB0aGUgY3VzdG9tIGNvbG9yIHRvIHRoZSBidXR0b25cclxuYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjdXN0b20tYmx1ZTtcclxuICAgIGNvbG9yOiB3aGl0ZTsgLy8gU2V0IGRlZmF1bHQgdGV4dCBjb2xvciB0byB3aGl0ZVxyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7IC8vIEFkZCBhIDFweCBzb2xpZCB3aGl0ZSBib3JkZXJcclxuICAgIHBhZGRpbmc6IDhweCAxNnB4OyAvLyBBZGp1c3QgcGFkZGluZyBhcyBuZWVkZWRcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDsgLy8gT3B0aW9uYWw6IEFkZCBib3JkZXItcmFkaXVzIGZvciByb3VuZGVkIGNvcm5lcnNcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgLy8gQWRkIGEgc21vb3RoIHRyYW5zaXRpb24gZm9yIGNvbG9yIGNoYW5nZVxyXG4gIFxyXG4gICAgLy8gQ2hhbmdlIHRleHQgY29sb3IgdG8gYmx1ZSBvbiBob3ZlclxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgY29sb3I6ICRjdXN0b20tYmx1ZTtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIH1cclxuICB9XHJcbiAgLmJnLXJnYi0zMi02Mi0xMjkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMyLCA2MiwgMTI5KTtcclxuICB9XHJcbiAgIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["moveItemInArray","transferArrayItem","i0","BoardComponent","constructor","route","dataService","router","id","title","cards","ngOnInit","boardId","snapshot","paramMap","get","boardInfo","getBoardInfo","data","lists","getBoardLists","list","listCards","getListCards","handleRealtimeUpdates","saveBoardTitle","updateBoard","titleChanged","deleteBoard","navigateByUrl","addList","newList","addBoardList","length","editingTitle","edit","editTitle","updateListTitle","updateBoardList","deleteBoardList","addCard","addListCard","editingCard","card","editCard","updateCard","deleteCard","moveCardToList","newListId","oldlist","listId","filter","c","push","onCardDropped","event","targetListId","previousListId","previousContainer","item","splice","currentIndex","onDrop","container","previousIndex","onCardDragEnded","isPointerOverContainer","addUser","res","addUserToBoard","addUserEmail","onKeydownHandler","keyCode","Object","keys","map","getTableChanges","subscribe","update","record","new","old","eventType","table","list_id","newArr","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\pablo.bogado\\Desktop\\Angular\\TareasKanban\\src\\app\\components\\inside\\board\\board.component.ts","C:\\Users\\pablo.bogado\\Desktop\\Angular\\TareasKanban\\src\\app\\components\\inside\\board\\board.component.html"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss'],\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  lists: any[] = [];\r\n  boardId: string | null = null;\r\n  editTitle: any = {};\r\n  editCard: any = {};\r\n  boardInfo: any = null;\r\n  titleChanged = false;\r\n\r\n  listCards: any = {};\r\n  addUserEmail = '';\r\n\r\n  lista = [\r\n    { id: 'list1', title: 'Lista 1', cards: ['Card 1', 'Card 2', 'Card 3'] },\r\n    { id: 'list2', title: 'Lista 2', cards: ['Card 4', 'Card 5', 'Card 6'] },\r\n    { id: 'list3', title: 'Lista 3', cards: ['Card 7', 'Card 8', 'Card 9'] }\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.boardId = this.route.snapshot.paramMap.get('id');\r\n    if (this.boardId) {\r\n      this.boardInfo = (await this.dataService.getBoardInfo(this.boardId)).data;\r\n\r\n      this.lists = await this.dataService.getBoardLists(this.boardId);\r\n\r\n      // Retrieve cards for each list\r\n      for (let list of this.lists) {\r\n        this.listCards[list.id] = await this.dataService.getListCards(list.id);\r\n      }\r\n\r\n      this.handleRealtimeUpdates();\r\n    }\r\n  }\r\n\r\n  //\r\n  // BOARD logic\r\n  //\r\n  async saveBoardTitle() {\r\n    await this.dataService.updateBoard(this.boardInfo);\r\n    this.titleChanged = false;\r\n  }\r\n\r\n  async deleteBoard() {\r\n    await this.dataService.deleteBoard(this.boardInfo);\r\n    this.router.navigateByUrl('/workspace');\r\n  }\r\n\r\n  //\r\n  // LISTS logic\r\n  //\r\n  async addList() {\r\n    const newList = await this.dataService.addBoardList(\r\n      this.boardId!,\r\n      this.lists.length\r\n    );\r\n  }\r\n\r\n  editingTitle(list: any, edit = false) {\r\n    this.editTitle[list.id] = edit;\r\n  }\r\n\r\n  async updateListTitle(list: any) {\r\n    await this.dataService.updateBoardList(list);\r\n    this.editingTitle(list, false);\r\n  }\r\n\r\n  async deleteBoardList(list: any) {\r\n    await this.dataService.deleteBoardList(list);\r\n  }\r\n\r\n  //\r\n  // CARDS logic\r\n  //\r\n  async addCard(list: any) {\r\n    await this.dataService.addListCard(\r\n      list.id,\r\n      this.boardId!,\r\n      this.listCards[list.id].length\r\n    );\r\n  }\r\n\r\n  editingCard(card: any, edit = false) {\r\n    this.editCard[card.id] = edit;\r\n  }\r\n\r\n  async updateCard(card: any) {\r\n    await this.dataService.updateCard(card);\r\n    this.editingCard(card, false);\r\n  }\r\n\r\n  async deleteCard(card: any) {\r\n    await this.dataService.deleteCard(card);\r\n  }\r\n\r\n\r\n  moveCardToList(card: any, newListId : number) {\r\n    const oldlist = card.listId;\r\n    //Eliminar la tarjeta de la lista actual\r\n    this.listCards[oldlist] = this.listCards[oldlist].filter((c: { id: any; }) => c.id !== card.id);\r\n    //Agregar la tarjeta a la nueva lista\r\n    card.listId = newListId;\r\n    this.listCards[newListId].push(card);\r\n  }\r\n\r\n  onCardDropped(event: CdkDragDrop<any>, targetListId: string) {\r\n    const previousListId = event.previousContainer.id;\r\n    const card = event.item.data;\r\n\r\n    // Eliminar la tarjeta de la lista de origen\r\n    this.listCards[previousListId] = this.listCards[previousListId].filter((c: { id: any; }) => c.id !== card.id);\r\n\r\n    // Insertar la tarjeta en la lista de destino en la posición actual\r\n    this.listCards[targetListId].splice(event.currentIndex, 0, card); \r\n  }\r\n  \r\n  \r\n  onDrop(event: CdkDragDrop<string[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  onCardDragEnded(event: any, listId: string) {\r\n    const currentIndex = event.currentIndex;\r\n    const previousIndex = event.previousIndex;\r\n\r\n    if (currentIndex !== previousIndex && !event.isPointerOverContainer) {\r\n        // Si la tarjeta no se soltó en una lista, devolverla a su posición original\r\n        const card = event.item.data;\r\n        const list = this.listCards[listId];\r\n\r\n        // Eliminar la tarjeta de su posición actual y devolverla a la posición anterior\r\n        list.splice(currentIndex, 1);\r\n        list.splice(previousIndex, 0, card);\r\n    }\r\n  }\r\n\r\n  // Invites\r\n  async addUser() {\r\n    const res = await this.dataService.addUserToBoard(\r\n      this.boardId!,\r\n      this.addUserEmail\r\n    );\r\n    this.addUserEmail = '';\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(\r\n    event: KeyboardEvent\r\n  ) {\r\n    if (event.keyCode === 27) {\r\n      // Close whatever needs to be closed!\r\n      this.titleChanged = false;\r\n\r\n      Object.keys(this.editCard).map((item) => {\r\n        this.editCard[item] = false;\r\n        return item;\r\n      });\r\n\r\n      Object.keys(this.editTitle).map((item) => {\r\n        this.editTitle[item] = false;\r\n        return item;\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRealtimeUpdates() {\r\n    this.dataService.getTableChanges().subscribe((update: any) => {\r\n      const record = update.new?.id ? update.new : update.old;\r\n      const event = update.eventType;\r\n\r\n      if (!record) return;\r\n\r\n      if (update.table == 'cards') {\r\n        if (event === 'INSERT') {\r\n          this.listCards[record.list_id].push(record);\r\n        } else if (event === 'UPDATE') {\r\n          const newArr = [];\r\n\r\n          for (let card of this.listCards[record.list_id]) {\r\n            if (card.id == record.id) {\r\n              card = record;\r\n            }\r\n            newArr.push(card);\r\n          }\r\n          this.listCards[record.list_id] = newArr;\r\n        } else if (event === 'DELETE') {\r\n          this.listCards[record.list_id] = this.listCards[\r\n            record.list_id\r\n          ].filter((card: any) => card.id !== record.id);\r\n        }\r\n      } else if (update.table == 'lists') {\r\n        if (event === 'INSERT') {\r\n          this.lists.push(record);\r\n          this.listCards[record.id] = [];\r\n        } else if (event === 'UPDATE') {\r\n          this.lists.filter((list: any) => list.id === record.id)[0] = record;\r\n\r\n          const newArr = [];\r\n\r\n          for (let list of this.lists) {\r\n            if (list.id == record.id) {\r\n              list = record;\r\n            }\r\n            newArr.push(list);\r\n          }\r\n          this.lists = newArr;\r\n        } else if (event === 'DELETE') {\r\n          this.lists = this.lists.filter((list: any) => list.id !== record.id);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n  <div\r\n    class=\"grid grid-cols-2 gap-x-4 gap-y-8 sm:grid-cols-3 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8\"\r\n  >\r\n    <!-- ITERATE ALL LISTS -->\r\n    <div class=\"container\">\r\n      <div class=\"list\" *ngFor=\"let list of lists\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n        <h3>{{ list.title }}</h3>\r\n        <div class=\"card\" *ngFor=\"let card of list.cards\" cdkDrag>{{ card }}</div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      *ngFor=\"let list of lists\"\r\n      class=\"list-container\"\r\n      cdkDropList\r\n      [cdkDropListData]=\"listCards[list.id]\"\r\n      (cdkDropListDropped)=\"onCardDropped($event, list.id)\"\r\n    >\r\n      <div class=\"relative min-h-52 h-auto rounded font-semibold text-sm py-4 px-4\" style=\"background-color: rgb(32, 62, 129);\">\r\n        <div class=\"flex gap-2 pb-4\">\r\n          <p\r\n            (click)=\"editingTitle(list, true)\"\r\n            class=\"hover:cursor-pointer text-white\"\r\n            *ngIf=\"!editTitle[list.id]\"\r\n          >\r\n            {{ list.title }}\r\n          </p>\r\n          <input\r\n            [(ngModel)]=\"list.title\"\r\n            *ngIf=\"editTitle[list.id]\"\r\n            class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-emerald-500 focus:border-emerald-500 sm:text-sm\"\r\n          />\r\n          <button\r\n            class=\"font-medium\"\r\n            *ngIf=\"editTitle[list.id]\"\r\n            (click)=\"updateListTitle(list)\"\r\n          >\r\n            Guardar\r\n          </button>\r\n        </div>\r\n\r\n        <!-- ITERATE LIST CARDS -->\r\n        <div\r\n          class=\"flex flex-col items-center gap-2\"\r\n          *ngFor=\"let card of listCards[list.id]\"\r\n          cdkDrag\r\n          [cdkDragData]=\"card\"\r\n          (cdkDragEnded)=\"onCardDragEnded($event, list.id)\"\r\n          (click)=\"editingCard(card, true)\"\r\n        >\r\n          <p class=\"h-15 py-2 px-2 bg-white inline-block\" style=\"overflow:hidden; display: flex;\" *ngIf=\"!editCard[card.id]\">\r\n            {{ card.title }}\r\n          </p>\r\n          <input\r\n            [(ngModel)]=\"card.title\"\r\n            *ngIf=\"editCard[card.id]\"\r\n            class=\"block px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-emerald-500 focus:border-emerald-500 sm:text-sm\"\r\n          />\r\n          <div class=\"flex align-items-center justify-between\">\r\n            <button\r\n              class=\"font-medium\"\r\n              *ngIf=\"editCard[card.id]\"\r\n              (click)=\"updateCard(card)\"\r\n            >\r\n              Actualizar\r\n            </button>\r\n\r\n            <button\r\n              class=\"font-medium text-red-600\"\r\n              *ngIf=\"editCard[card.id]\"\r\n              (click)=\"deleteCard(card)\"\r\n            >\r\n              Borrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          (click)=\"addCard(list)\"\r\n          class=\"pt-8 text-gray-500 hover:cursor-pointer\"\r\n        >\r\n          + Agregar Tarjeta\r\n        </div>\r\n        <button\r\n          class=\"font-medium text-small text-red-700 hover:text-white\"\r\n          (click)=\"deleteBoardList(list)\"\r\n        >\r\n          Eliminar Lista\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      (click)=\"addList()\"\r\n      class=\"relative min-h-auto h-16 rounded font-semibold text-lg py-4 px-4\"\r\n      style=\"background-color: rgb(32, 62, 129); color: white; \"\r\n    >\r\n      + Nueva Lista\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex gap-4 py-12 items-center\">\r\n    <span class=\"text-3xl font-extrabold text-gray-900 block\">Invitar</span>\r\n\r\n    <input\r\n      [(ngModel)]=\"addUserEmail\"\r\n      placeholder=\"ejemplo@xd.com\"\r\n      class=\"block px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-emerald-500 focus:border-emerald-500 sm:text-sm\"\r\n    />\r\n    <button\r\n      (click)=\"addUser()\"\r\n      class=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\r\n    >\r\n      Invitar\r\n    </button>\r\n  </div>\r\n</main>\r\n\r\n"]},"metadata":{},"sourceType":"module"}