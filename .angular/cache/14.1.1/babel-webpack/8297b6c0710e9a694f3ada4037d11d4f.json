{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Desktop/LCIK/TP IS2_renovado/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nlet BoardComponent = class BoardComponent {\n  constructor(route, dataService, router) {\n    this.route = route;\n    this.dataService = dataService;\n    this.router = router;\n    this.lists = [];\n    this.boardId = null;\n    this.editTitle = {};\n    this.editCard = {};\n    this.boardInfo = null;\n    this.titleChanged = false;\n    this.listCards = {};\n    this.addUserEmail = '';\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.boardId = _this.route.snapshot.paramMap.get('id');\n\n      if (_this.boardId) {\n        _this.boardInfo = (yield _this.dataService.getBoardInfo(_this.boardId)).data;\n        _this.lists = yield _this.dataService.getBoardLists(_this.boardId); // Retrieve cards for each list\n\n        for (let list of _this.lists) {\n          _this.listCards[list.id] = yield _this.dataService.getListCards(list.id);\n        }\n\n        _this.handleRealtimeUpdates();\n      }\n    })();\n  } //\n  // BOARD logic\n  //\n\n\n  saveBoardTitle() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.dataService.updateBoard(_this2.boardInfo);\n      _this2.titleChanged = false;\n    })();\n  }\n\n  deleteBoard() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.dataService.deleteBoard(_this3.boardInfo);\n\n      _this3.router.navigateByUrl('/workspace');\n    })();\n  } //\n  // LISTS logic\n  //\n\n\n  addList() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const newList = yield _this4.dataService.addBoardList(_this4.boardId, _this4.lists.length);\n    })();\n  }\n\n  editingTitle(list, edit = false) {\n    this.editTitle[list.id] = edit;\n  }\n\n  updateListTitle(list) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.dataService.updateBoardList(list);\n\n      _this5.editingTitle(list, false);\n    })();\n  }\n\n  deleteBoardList(list) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.dataService.deleteBoardList(list);\n    })();\n  } //\n  // CARDS logic\n  //\n\n\n  addCard(list) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.dataService.addListCard(list.id, _this7.boardId, _this7.listCards[list.id].length);\n    })();\n  }\n\n  editingCard(card, edit = false) {\n    this.editCard[card.id] = edit;\n  }\n\n  updateCard(card) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this8.dataService.updateCard(card);\n\n      _this8.editingCard(card, false);\n    })();\n  }\n\n  deleteCard(card) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this9.dataService.deleteCard(card);\n    })();\n  } // Invites\n\n\n  addUser() {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this10.dataService.addUserToBoard(_this10.boardId, _this10.addUserEmail);\n      _this10.addUserEmail = '';\n    })();\n  }\n\n  onKeydownHandler(event) {\n    if (event.keyCode === 27) {\n      // Close whatever needs to be closed!\n      this.titleChanged = false;\n      Object.keys(this.editCard).map(item => {\n        this.editCard[item] = false;\n        return item;\n      });\n      Object.keys(this.editTitle).map(item => {\n        this.editTitle[item] = false;\n        return item;\n      });\n    }\n  }\n\n  handleRealtimeUpdates() {\n    this.dataService.getTableChanges().subscribe(update => {\n      const record = update.new?.id ? update.new : update.old;\n      const event = update.eventType;\n      if (!record) return;\n\n      if (update.table == 'cards') {\n        if (event === 'INSERT') {\n          this.listCards[record.list_id].push(record);\n        } else if (event === 'UPDATE') {\n          const newArr = [];\n\n          for (let card of this.listCards[record.list_id]) {\n            if (card.id == record.id) {\n              card = record;\n            }\n\n            newArr.push(card);\n          }\n\n          this.listCards[record.list_id] = newArr;\n        } else if (event === 'DELETE') {\n          this.listCards[record.list_id] = this.listCards[record.list_id].filter(card => card.id !== record.id);\n        }\n      } else if (update.table == 'lists') {\n        if (event === 'INSERT') {\n          this.lists.push(record);\n          this.listCards[record.id] = [];\n        } else if (event === 'UPDATE') {\n          this.lists.filter(list => list.id === record.id)[0] = record;\n          const newArr = [];\n\n          for (let list of this.lists) {\n            if (list.id == record.id) {\n              list = record;\n            }\n\n            newArr.push(list);\n          }\n\n          this.lists = newArr;\n        } else if (event === 'DELETE') {\n          this.lists = this.lists.filter(list => list.id !== record.id);\n        }\n      }\n    });\n  }\n\n};\n\n__decorate([HostListener('document:keydown', ['$event'])], BoardComponent.prototype, \"onKeydownHandler\", null);\n\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"mappings":"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","names":["Component","HostListener","BoardComponent","constructor","route","dataService","router","ngOnInit","boardId","snapshot","paramMap","get","boardInfo","getBoardInfo","data","lists","getBoardLists","list","listCards","id","getListCards","handleRealtimeUpdates","saveBoardTitle","updateBoard","titleChanged","deleteBoard","navigateByUrl","addList","newList","addBoardList","length","editingTitle","edit","editTitle","updateListTitle","updateBoardList","deleteBoardList","addCard","addListCard","editingCard","card","editCard","updateCard","deleteCard","addUser","res","addUserToBoard","addUserEmail","onKeydownHandler","event","keyCode","Object","keys","map","item","getTableChanges","subscribe","update","record","new","old","eventType","table","list_id","push","newArr","filter","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\LCIK\\TP IS2_renovado\\src\\app\\components\\inside\\board\\board.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss'],\n})\nexport class BoardComponent implements OnInit {\n  lists: any[] = [];\n  boardId: string | null = null;\n  editTitle: any = {};\n  editCard: any = {};\n  boardInfo: any = null;\n  titleChanged = false;\n\n  listCards: any = {};\n  addUserEmail = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.boardId = this.route.snapshot.paramMap.get('id');\n    if (this.boardId) {\n      this.boardInfo = (await this.dataService.getBoardInfo(this.boardId)).data;\n\n      this.lists = await this.dataService.getBoardLists(this.boardId);\n\n      // Retrieve cards for each list\n      for (let list of this.lists) {\n        this.listCards[list.id] = await this.dataService.getListCards(list.id);\n      }\n\n      this.handleRealtimeUpdates();\n    }\n  }\n\n  //\n  // BOARD logic\n  //\n  async saveBoardTitle() {\n    await this.dataService.updateBoard(this.boardInfo);\n    this.titleChanged = false;\n  }\n\n  async deleteBoard() {\n    await this.dataService.deleteBoard(this.boardInfo);\n    this.router.navigateByUrl('/workspace');\n  }\n\n  //\n  // LISTS logic\n  //\n  async addList() {\n    const newList = await this.dataService.addBoardList(\n      this.boardId!,\n      this.lists.length\n    );\n  }\n\n  editingTitle(list: any, edit = false) {\n    this.editTitle[list.id] = edit;\n  }\n\n  async updateListTitle(list: any) {\n    await this.dataService.updateBoardList(list);\n    this.editingTitle(list, false);\n  }\n\n  async deleteBoardList(list: any) {\n    await this.dataService.deleteBoardList(list);\n  }\n\n  //\n  // CARDS logic\n  //\n  async addCard(list: any) {\n    await this.dataService.addListCard(\n      list.id,\n      this.boardId!,\n      this.listCards[list.id].length\n    );\n  }\n\n  editingCard(card: any, edit = false) {\n    this.editCard[card.id] = edit;\n  }\n\n  async updateCard(card: any) {\n    await this.dataService.updateCard(card);\n    this.editingCard(card, false);\n  }\n\n  async deleteCard(card: any) {\n    await this.dataService.deleteCard(card);\n  }\n\n  // Invites\n  async addUser() {\n    const res = await this.dataService.addUserToBoard(\n      this.boardId!,\n      this.addUserEmail\n    );\n    this.addUserEmail = '';\n  }\n\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(\n    event: KeyboardEvent\n  ) {\n    if (event.keyCode === 27) {\n      // Close whatever needs to be closed!\n      this.titleChanged = false;\n\n      Object.keys(this.editCard).map((item) => {\n        this.editCard[item] = false;\n        return item;\n      });\n\n      Object.keys(this.editTitle).map((item) => {\n        this.editTitle[item] = false;\n        return item;\n      });\n    }\n  }\n\n  handleRealtimeUpdates() {\n    this.dataService.getTableChanges().subscribe((update: any) => {\n      const record = update.new?.id ? update.new : update.old;\n      const event = update.eventType;\n\n      if (!record) return;\n\n      if (update.table == 'cards') {\n        if (event === 'INSERT') {\n          this.listCards[record.list_id].push(record);\n        } else if (event === 'UPDATE') {\n          const newArr = [];\n\n          for (let card of this.listCards[record.list_id]) {\n            if (card.id == record.id) {\n              card = record;\n            }\n            newArr.push(card);\n          }\n          this.listCards[record.list_id] = newArr;\n        } else if (event === 'DELETE') {\n          this.listCards[record.list_id] = this.listCards[\n            record.list_id\n          ].filter((card: any) => card.id !== record.id);\n        }\n      } else if (update.table == 'lists') {\n        if (event === 'INSERT') {\n          this.lists.push(record);\n          this.listCards[record.id] = [];\n        } else if (event === 'UPDATE') {\n          this.lists.filter((list: any) => list.id === record.id)[0] = record;\n\n          const newArr = [];\n\n          for (let list of this.lists) {\n            if (list.id == record.id) {\n              list = record;\n            }\n            newArr.push(list);\n          }\n          this.lists = newArr;\n        } else if (event === 'DELETE') {\n          this.lists = this.lists.filter((list: any) => list.id !== record.id);\n        }\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}